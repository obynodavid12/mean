---
- hosts: mongodb
  become: yes
  handlers:
    - name: restart mongod
      service: name=mongod state=restarted
  vars_files:
    - credentials.yml
    - app_settings.yml
  tasks:
    - name: Install the EPEL repository
      yum:
        name: epel-release  # An RPM package that will install the yum for me
        state: present

    - name: Install pip
      yum: name=python-pip state=present

    - name: Install pymongo
      pip: name=pymongo state=present 

    - name: Add the MongoDB repository
      yum_repository: 
        name: mongodb-org-3.4
        description: MongoDB repository 
        baseurl: https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.4/x86_64/
        enabled: yes
        gpgkey: https://www.mongodb.org/static/pgp/server-3.4.asc
        gpgcheck: yes

    - name: Install MongoDB package
      yum:
        name: mongodb-org 
        state: present

    - name: Start and enable the service
      service:
        name: mongod
        state: started        
        enabled: yes    
   
    - name: Is the root account created?
      stat: path=/root/.rootCreated
      register: rootCreated
    # #The admin database in mongodb is the database that is used to store the users of any database in the engine.It manages MongoDB users globally
    - name: Create the admin account
      mongodb_user: 
        database: admin 
        name: root
        password: "{{admin_password}}"    #we specify it like this due to the credentials.yml file we created in the vars_files above
        roles: root
        state: present
      when: rootCreated.stat.exists == false  

    - name: Create the .rootCreated file 
      copy:
        content: ""
        dest: /root/.rootCreated
        force: no                            ##this one has already been address when we added "no". That means if the root file exist don't attempt to override it and would not report a change has happened to the machine

    - name: Upload the configuration file
      copy:
        src: files/mongod.conf 
        dest: /etc/mongod.conf 
      notify: restart mongod 
    
    - name: Is the application user created?
      shell: mongo admin -u root -p{{ admin_password }} --eval "db.system.users.find()"
      register: userCreated
      changed_when: false
    
    - name: Create the user, password and database for the application
      mongodb_user:
        database: "{{ db_name }}"
        login_user: root 
        login_password: "{{admin_password}}"
        name: "{{app_user}}"
        password: "{{app_password}}"
        roles: dbOwner
        state: present  
      when: "app_user not in userCreated.stdout"
     #remember using the > symbol allows spanning multiple lines in YAML
    - name: Is the seed record created?
      shell: mongo {{ db_name }} -u {{ app_user}} -p{{ app_password }} --eval "db.users.find()"     ##these are the users of the application and not the database
      register: seedCreated
      changed_when: false
    
    - name: Add the seed record
      shell: >
        mongo {{ db_name }} -u {{ app_user}} -p{{ app_password }} --eval 'db.users.insert(
              {
                 "name": "Obinna Ukoumunne",
                 "email": "dataalgebra12@gmail.com",
                 "password": "$1$WqKHroVW$4E8QKizxPFB8s.N6/ZnrV/",       
                 "username": "dataalgebra12",
                 "permission": "admin",
                 "active": true,
              }
            )'
      when: "'dataalgebra12' not in seedCreated.stdout"